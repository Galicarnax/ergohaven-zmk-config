#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    quick-tap-ms = <200>;
    hold-while-undecided;
};

&lt {
    quick-tap-ms = <200>;
    flavor = "hold-preferred";
    hold-while-undecided;
};

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        gui_td_1: gui_td_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_1";
            #binding-cells = <0>;
            bindings = <&kp LG(N1)>, <&kp LA(LG(N1))>;
        };

        gui_td_2: gui_td_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_2";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_2)>, <&kp LA(LG(NUMBER_2))>;
        };

        gui_td_3: gui_td_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_3";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_3)>, <&kp LA(LG(NUMBER_3))>;
        };

        gui_td_4: gui_td_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_4";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_4)>, <&kp LA(LG(NUMBER_4))>;
        };

        gui_td_5: gui_td_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_5";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_5)>, <&kp LA(LG(NUMBER_5))>;
        };

        gui_td_6: gui_td_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_6";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_6)>, <&kp LA(LG(NUMBER_6))>;
        };

        gui_td_7: gui_td_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_7";
            #binding-cells = <0>;
            bindings = <&kp LG(N7)>, <&kp LA(LG(N7))>;
        };

        gui_td_8: gui_td_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_8";
            #binding-cells = <0>;
            bindings = <&kp LG(N8)>, <&kp LA(LG(N8))>;
        };

        gui_td_9: gui_td_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_9";
            #binding-cells = <0>;
            bindings = <&kp LG(N9)>, <&kp LG(LA(N9))>;
        };

        gui_td_10: gui_td_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TD_10";
            #binding-cells = <0>;
            bindings = <&kp LG(N0)>, <&kp LA(LG(N0))>;
        };

        mpd_td_1: mpd_td_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "MPD_TD_1";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(N1))>, <&kp LA(LC(LG(N1)))>;
        };

        mpd_td_2: mpd_td_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "MPD_TD_2";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(NUMBER_2))>, <&kp LA(LC(LG(NUMBER_2)))>;
        };

        mpd_td_3: mpd_td_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "MPD_TD_3";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(NUMBER_3))>, <&kp LA(LC(LG(NUMBER_3)))>;
        };

        mpd_td_4: mpd_td_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "MPD_TD_4";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(NUMBER_4))>, <&kp LA(LC(LG(NUMBER_4)))>;
        };

        mpd_td_5: mpd_td_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "MPD_TD_5";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(NUMBER_5))>, <&kp LA(LC(LG(NUMBER_5)))>;
        };

        mpd_td_0: mpd_td_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "MPD_TD_0";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(N0))>, <&kp LA(LC(LG(N0)))>;
        };

        lang_switch_ru: lang_switch_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "LANG_SWITCH_RU";
            bindings = <&mo>, <&layer_ru>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        lang_switch_en: lang_switch_en {
            compatible = "zmk,behavior-hold-tap";
            label = "LANG_SWITCH_EN";
            bindings = <&mo>, <&layer_en>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    macros {
        sen_mo: new_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_wait_time 400>,
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>;

            label = "NEW_MACRO";
            wait-ms = <15>;
            tap-ms = <50>;
        };

        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 10>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0>;
            label = "TO_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to_ru &kp LG(LA(R))>;
            label = "LAYER_RU";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to_en &kp LG(LA(E))>;
            label = "LAYER_EN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB        &kp Q  &kp W           &kp E      &kp R           &kp T                        &kp Y  &kp U  &kp I                   &kp O                        &kp P     &kp BSPC
&lt 1 ESC      &kp A  &kp S           &kp D      &kp F           &kp G                        &kp H  &kp J  &kp K                   &kp L                        &kp SEMI  &kp SQT
&kp LC(LSHFT)  &kp Z  &kp X           &kp C      &kp V           &kp B                        &kp N  &kp M  &kp COMMA               &kp DOT                      &kp FSLH  &lang_switch_ru 8 0
                      &mt LALT GRAVE  &kp LCTRL  &kp LEFT_SHIFT  &mo 6  &kp SPACE    &kp RET  &mo 2  &none  &mt RCTRL LEFT_BRACKET  &mt RIGHT_ALT RIGHT_BRACKET
            >;

            display-name = "Base";
        };

        nav {
            bindings = <
&trans  &kp F1        &kp F2           &kp F3               &kp F4  &kp F5                        &kp F6           &kp F7    &kp F8        &kp F9           &kp F10     &trans
&trans  &kp CAPSLOCK  &kp PRINTSCREEN  &kp LG(PRINTSCREEN)  &trans  &none                         &kp LEFT         &kp DOWN  &kp UP        &kp RIGHT_ARROW  &kp INSERT  &trans
&trans  &trans        &none            &none                &none   &none                         &kp LC(HOME)     &kp HOME  &kp PG_UP     &kp PAGE_DOWN    &kp END     &kp LC(END)
                      &trans           &trans               &trans  &mo 9   &trans    &kp DELETE  &kp RIGHT_SHIFT  &trans    &kp LC(LEFT)  &kp LC(RIGHT)
            >;

            display-name = "Navigation";
        };

        sym {
            bindings = <
&kp GRAVE  &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5                   &kp N6     &kp N7         &kp N8            &kp N9             &kp N0     &trans
&kp TILDE  &kp EXCL       &kp AT_SIGN    &kp HASH          &kp DOLLAR    &kp PRCNT                      &kp CARET  &kp AMPERSAND  &kp ASTRK         &kp PIPE           &kp COLON  &kp AT_SIGN
&trans     &kp BACKSLASH  &kp LPAR       &kp RPAR          &kp UNDER     &kp MINUS                      &kp PLUS   &kp EQUAL      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp QMARK  &trans
                          &kp LESS_THAN  &kp GREATER_THAN  &trans        &mo 7         &none    &trans  &trans     &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            display-name = "NumSym";
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&none   &none   &mkp MB3  &mkp MB2  &mkp MB1  &mo 5                     &mo 5   &mkp MB1  &mkp MB2  &mkp MB3  &mo 4   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &mo 4     &trans  &trans    &trans  &trans  &none     &trans    &trans
            >;

            display-name = "Mouse";
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "Scroll";
        };

        sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "Sniper";
        };

        User0 {
            bindings = <
&kp LG(TAB)  &mo 5      &kp LG(W)     &kp LG(E)  &mo 4           &kp LG(T)                           &kp LG(Y)        &kp LG(U)  &kp LG(I)      &kp LG(O)    &kp LG(P)     &kp LG(BACKSPACE)
&trans       &kp LG(A)  &kp LG(S)     &kp LG(D)  &kp LG(F)       &mkp MB1                            &kp LG(H)        &kp LG(J)  &kp LG(K)      &kp LG(L)    &kp LG(SEMI)  &kp LG(SQT)
&trans       &kp LG(Z)  &kp LG(X)     &kp LG(C)  &kp LG(V)       &kp LG(B)                           &kp LG(N)        &kp LG(M)  &kp LG(COMMA)  &kp LG(DOT)  &kp LG(FSLH)  &trans
                        &kp LEFT_ALT  &mkp MB2   &kp LEFT_SHIFT  &trans     &trans    &kp LG(ENTER)  &lt 7 LG(SPACE)  &trans     &kp RCTRL      &kp RALT
            >;

            display-name = "GUI-1";
        };

        User1 {
            bindings = <
&trans  &gui_td_1  &gui_td_2  &gui_td_3  &gui_td_4      &gui_td_5                    &gui_td_6      &gui_td_7      &gui_td_8      &gui_td_9      &gui_td_10  &trans
&trans  &trans     &trans     &trans     &kp LA(LG(F))  &trans                       &kp LA(LG(H))  &kp LA(LG(J))  &kp LA(LG(K))  &kp LA(LG(L))  &trans      &trans
&trans  &trans     &trans     &trans     &trans         &trans                       &trans         &trans         &trans         &trans         &trans      &trans
                   &trans     &trans     &trans         &trans     &trans    &trans  &trans         &trans         &trans         &trans
            >;

            display-name = "GUI-2";
        };

        User2 {
            bindings = <
&trans  &mpd_td_1  &mpd_td_2  &mpd_td_3      &mpd_td_4  &mpd_td_5                        &kp LC(LG(F))      &kp LC(LG(Y))  &kp LC(LG(B))      &kp LC(LG(O))      &trans         &kp PAUSE_BREAK
&trans  &trans     &trans     &trans         &trans     &kp LC(LG(R))                    &kp LC(LG(H))      &kp LC(LG(J))  &kp LC(LG(K))      &kp LC(LG(L))      &mpd_td_0      &trans
&trans  &trans     &trans     &kp LC(LG(C))  &trans     &trans                           &trans             &kp LC(LG(P))  &kp LS(LC(LG(H)))  &kp LS(LC(LG(L)))  &kp LC(LG(N))  &trans
                   &trans     &trans         &trans     &trans         &trans    &trans  &kp LC(LG(SPACE))  &trans         &trans             &trans
            >;

            display-name = "MPD";
        };

        User3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans         &trans          &trans             &trans          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp BACKSPACE  &kp DOWN_ARROW  &kp UP             &kp DELETE      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans         &trans          &trans             &trans          &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans          &kp LC(BACKSPACE)  &kp LC(DELETE)
            >;

            display-name = "Edit";
        };

        ru {
            display-name = "Ru";
            bindings = <
&kp TAB              &kp Q  &kp W           &kp E      &kp R           &kp T                        &kp Y   &kp U  &kp I                   &kp O                        &kp P     &kp BSPC
&lt 1 ESC            &kp A  &kp S           &kp D      &kp F           &kp G                        &kp H   &kp J  &kp K                   &kp L                        &kp SEMI  &kp SQT
&lang_switch_en 0 0  &kp Z  &kp X           &kp C      &kp V           &kp B                        &kp N   &kp M  &kp COMMA               &kp DOT                      &kp FSLH  &mo 8
                            &mt LALT GRAVE  &kp LCTRL  &kp LEFT_SHIFT  &mo 6  &kp SPACE    &kp RET  &mo 11  &none  &mt RCTRL LEFT_BRACKET  &mt RIGHT_ALT RIGHT_BRACKET
            >;
        };

        sym_ru {
            display-name = "SymRu";
            bindings = <
&kp GRAVE  &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5                   &kp N6     &kp N7     &kp N8            &kp N9             &kp N0     &trans
&kp TILDE  &kp EXCL       &kp AT_SIGN    &kp HASH          &kp DOLLAR    &kp PRCNT                      &kp CARET  &kp AMPS   &kp ASTRK         &kp PIPE           &kp COLON  &kp AT_SIGN
&trans     &kp BACKSLASH  &kp LPAR       &kp RPAR          &kp UNDER     &kp MINUS                      &kp PLUS   &kp EQUAL  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp QMARK  &trans
                          &kp LESS_THAN  &kp GREATER_THAN  &trans        &mo 7         &none    &trans  &trans     &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;
        };
    };
};

&trackball { cpi = <1200>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <4>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <5>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
